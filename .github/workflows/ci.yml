name: CI
on:
  push:
    branches:
      - 'feat/**'
      - 'ci/**'
      - 'issue/**'
      - 'master'
      - 'staging'
      - 'hotfix/**'
      - 'bug/**'
      - 'fix/**'
      - 'refactor/**'
      - 'build/**'
      - 'test/**'
      - 'dependabot/**'

jobs:
  test:
    name: Run Tests ðŸ”¬
    runs-on: ubuntu-latest

    steps:
      - name: Checkout ðŸ“¥
        uses: actions/checkout@v2.3.4

      - name: Get yarn cache ðŸ“¦
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2.1.5
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/setup-node@v2.1.5
      - uses: actions/setup-node@v2.1.5
        with:
          node-version: '12'

      - run: yarn install
      - run: yarn test --passWithNoTests

  deploy:
    name: Deploy ðŸš€
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/master'
    needs:
      - test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2.3.4

      - name: Push to Staging ðŸ› 
        if: github.ref == 'refs/heads/staging'
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_STG_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          dontuseforce: false

      - name: Push to Production ðŸ› 
        if: github.ref == 'refs/heads/master'
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_PROD_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          dontuseforce: false

      - name: Sentry release ðŸ“Œ
        if: github.ref == 'refs/heads/master'
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production

      - name: Release ðŸ“Œ
        if: "github.event_name == 'push'"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
